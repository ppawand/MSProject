###############################################
# respiration by trt
resp.average <-
as.data.frame(emmeans(gresp_model2, ~warming * residue * irrigation))
resp.average$avg <- 1/(resp.average$emmean)
resp.average$ucl <- 1/(resp.average$asymp.UCL)
resp.average$lcl <- 1/(resp.average$asymp.LCL)
resp_plot <- respiration %>%
group_by(block, plot, residue, warming, irrigation) %>%
summarise(mean.resp = mean(flux))
(flux_graph <- ggplot(resp_plot, aes(x = warming, fill = residue)) +
geom_violin(aes(y = mean.resp, color = residue), alpha = 0.3) +
geom_point(data = resp.average,
aes(x = warming, y = avg, group = residue),
size = 3,
position = position_dodge(width = 1)) +
geom_errorbar(data = resp.average,
aes(x = warming, ymin = lcl,
ymax = ucl, group = residue), width = 0.05,
position = position_dodge(width = 1)) +
facet_wrap(~ irrigation) +
labs(x="Treatments", y = expression("Soil Flux ("*mu~"mol" ~CO[2]~ m^-2~s^-1*")")) +
scale_color_manual(labels = c("No residue", "Residue"),
values = c("red3", "blue3")) +
scale_fill_manual(labels = c("No Residue", "Residue"),
values = c("red3", "blue3")) +
theme)
theme <- theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill = NA, linewidth = 1),
strip.text = element_text(size = 14),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
panel.border = element_rect(size  = 1))
####################################################
# library
####################################################
library(readxl)
library(tidyverse)
library(lme4)
library(effects)
library(cowplot)
library(scales)
library(car)
library(MuMIn) # to calculate R2
library(emmeans)
library(emmeans)
install.packages("emmeans")
library(emmeans)
theme <- theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill = NA, linewidth = 1),
strip.text = element_text(size = 14),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
panel.border = element_rect(size  = 1))
theme <- theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill = NA, linewidth = 1),
strip.text = element_text(size = 14),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
panel.border = element_rect(linewidth  = 1))
temp <- read_excel("~/Desktop/MS-project/data/TM.final.xlsx", sheet = 2)
temp <- temp %>%
pivot_longer(c(C, W, R, WR),
names_to = "trt",
values_to = "temperature",
values_drop_na = TRUE) %>%
filter(temperature > 10)
# removing outliers
Q1 <- quantile(temp$temperature, .25)
Q3 <- quantile(temp$temperature, .75)
IQR <- IQR(temp$temperature)
temp <- subset(temp, temp$temperature > (Q1 - 1.5*IQR) & temp$temperature < (Q3 + 1.5*IQR))
boxplot(temp$temperature)
# adding date and month columns
temp <- temp %>%
mutate(datee = format(date, format = "%F"),
month = format(date, format = "%b"),
day = format(date, format = "%d")) %>%
filter(month != "Nov")
moist<- read_excel("~/Desktop/MS-project/data/TM.final.xlsx", sheet = 3)
moist <- moist %>%
pivot_longer(c(C, W, R, WR),
names_to = "trt",
values_to = "moisture",
values_drop_na = TRUE)%>%
filter(moisture > 0)
# removing outliers
Q1m <- quantile(moist$moisture, .25)
Q3m <- quantile(moist$moisture, .75)
IQRm <- IQR(moist$moisture)
moist <- subset(moist, moist$moisture > (Q1m - 1.5*IQRm) & moist$moisture < (Q3m + 1.5*IQRm))
boxplot(moist$moisture)
# adding date and month columns
moist <- moist %>%
mutate(datee = format(date, format = "%F"),
month = format(date, format = "%b"),
day = format(date, format = "%d")) %>%
filter(month != "Nov")
# daily average temperature
temp.average <- temp %>%
group_by(block, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.temp = mean(temperature),
max.temp = max(temperature),
min.temp = min(temperature),
dtr = max.temp - min.temp)
# daily average moisture
moist.average <- moist %>%
group_by(block, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.moist = mean(moisture))
daily.TM <- merge(temp.average, moist.average)
daily.TM <- daily.TM[-1, ] # removing first row - not a full day average
daily.TM$warming <-ifelse(daily.TM$trt %in% c("C", "R"), "Control", "OTC")
daily.TM$residue <-ifelse(daily.TM$trt %in% c("C", "W"), "noResidue", "Residue")
daily.TM <- daily.TM %>%
relocate(warming, residue, .before = irrigation)
daily.TM[, c(1:6, 9)] <- lapply(daily.TM[, c(1:6, 9)], factor)
daily.TM$trt <- factor(daily.TM$trt, levels = c("C", "W", "R", "WR"))
daily.TM$month <- factor(daily.TM$month, levels = c("Jun", "Jul","Aug", "Sep", "Oct", "Nov"))
daily.TM$datee <- strptime(daily.TM$datee, format  = "%Y-%m-%d")
daily.TM$datee <- as.POSIXct(daily.TM$datee)
str(daily.TM)
weekly.TM <- daily.TM %>%
group_by(irrigation, trt, week = cut(datee, "week", start.on.monday = FALSE)) %>%
summarise(temp = mean(mean.temp),
moist = mean(mean.moist),
max.tempr = mean(max.temp),
min.tempr = mean(min.temp),
mean.dtr = mean(dtr))
weekly.TM$week <- strptime(weekly.TM$week, format  = "%Y-%m-%d")
weekly.TM$week <- as.POSIXct(weekly.TM$week)
# temporal variation of temperature (graph)
# mean temperature
(fig1 <- ggplot(weekly.TM, aes(week, temp, color = trt))+
geom_line(size = 1) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Soil Temperature ("*~degree*C*")")) +
facet_wrap(~irrigation) +
scale_y_continuous(limits = c(15, 35)) +
theme)
# temporal variation of temperature (graph)
# mean temperature
(fig1 <- ggplot(weekly.TM, aes(week, temp, color = trt))+
geom_line(linewidth = 1) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Soil Temperature ("*~degree*C*")")) +
facet_wrap(~irrigation) +
scale_y_continuous(limits = c(15, 35)) +
theme)
# max and min temp
(max_min <- ggplot(weekly.TM)+
geom_line(aes(x = week, y = max.tempr), lty = "solid", size = 0.7) +
geom_line(aes(x = week, y = min.tempr), lty = "dashed", size = 0.7) +
xlab( "Months") +
ylab(expression("Soil Temperature ("*~degree*C*")")) +
facet_grid(irrigation~trt) + theme)
# max and min temp
(max_min <- ggplot(weekly.TM)+
geom_line(aes(x = week, y = max.tempr), lty = "solid", linewidth = 0.7) +
geom_line(aes(x = week, y = min.tempr), lty = "dashed", linewidth = 0.7) +
xlab( "Months") +
ylab(expression("Soil Temperature ("*~degree*C*")")) +
facet_grid(irrigation~trt) + theme)
# daily temperature range
(dt <- ggplot(weekly.TM)+
geom_line(aes(x = week, y = mean.dtr, color = trt), size = 1) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Daily temperature range ("*~degree*C*")")) +
facet_wrap(~ irrigation) + theme)
#######################################################
# precipitation
precipitation <- read_excel("~/Desktop/MS-project/data/weather.data.xlsx")
str(precipitation)
weekly.rain <- precipitation %>%
group_by(week = cut(date.time, "week", start.on.monday = FALSE)) %>%
summarise(rain = sum(precipitation))
weekly.rain$week <- strptime(weekly.rain$week, format  = "%Y-%m-%d")
weekly.rain$week <- as.POSIXct(weekly.rain$week)
####################################################
# temporal variation of moisture (graph)
(fig2 <- ggplot(weekly.TM, aes(week, color = trt)) +
geom_line(aes(y = moist), size = 1) +
geom_bar(data = weekly.rain, aes(x = week, y = rain/100), width = 0.01,
stat = "identity",
fill = "deepskyblue3" ,
color = "deepskyblue3") +
scale_y_continuous(sec.axis = sec_axis (~ .*100, name = "Rainfall (mm)")) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Volumetric water content ("*m^3/m^3*")")) +
facet_wrap(~irrigation) + theme)
# temperature model
monthly.avg.TM <- daily.TM %>%
group_by(block, plot, warming, residue, irrigation, month) %>%
summarize(moisture = mean(mean.moist),
temp = mean(mean.temp),
mean.dtr = mean(dtr))
temp_model <- lmer(temp ~ warming * residue * irrigation +
(1|block) + (1|month),
data = monthly.avg.TM)
temp <- read_excel("~/Desktop/MS-project/data/TM.final.xlsx", sheet = 2)
temp <- temp %>%
pivot_longer(c(C, W, R, WR),
names_to = "trt",
values_to = "temperature",
values_drop_na = TRUE) %>%
filter(temperature > 10)
# removing outliers
Q1 <- quantile(temp$temperature, .25)
Q3 <- quantile(temp$temperature, .75)
IQR <- IQR(temp$temperature)
temp <- subset(temp, temp$temperature > (Q1 - 1.5*IQR) & temp$temperature < (Q3 + 1.5*IQR))
boxplot(temp$temperature)
# adding date and month columns
temp <- temp %>%
mutate(datee = format(date, format = "%F"),
month = format(date, format = "%b"),
day = format(date, format = "%d")) %>%
filter(month != "Nov")
moist<- read_excel("~/Desktop/MS-project/data/TM.final.xlsx", sheet = 3)
moist <- moist %>%
pivot_longer(c(C, W, R, WR),
names_to = "trt",
values_to = "moisture",
values_drop_na = TRUE)%>%
filter(moisture > 0)
# removing outliers
Q1m <- quantile(moist$moisture, .25)
Q3m <- quantile(moist$moisture, .75)
IQRm <- IQR(moist$moisture)
moist <- subset(moist, moist$moisture > (Q1m - 1.5*IQRm) & moist$moisture < (Q3m + 1.5*IQRm))
boxplot(moist$moisture)
# adding date and month columns
moist <- moist %>%
mutate(datee = format(date, format = "%F"),
month = format(date, format = "%b"),
day = format(date, format = "%d")) %>%
filter(month != "Nov")
# daily average temperature
temp.average <- temp %>%
group_by(block, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.temp = mean(temperature),
max.temp = max(temperature),
min.temp = min(temperature),
dtr = max.temp - min.temp)
# daily average moisture
moist.average <- moist %>%
group_by(block, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.moist = mean(moisture))
# daily average temperature
temp.average <- temp %>%
group_by(wp, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.temp = mean(temperature),
max.temp = max(temperature),
min.temp = min(temperature),
dtr = max.temp - min.temp)
# daily average moisture
moist.average <- moist %>%
group_by(wp, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.moist = mean(moisture))
moist<- read_excel("~/Desktop/MS-project/data/TM.final.xlsx", sheet = 3)
moist <- moist %>%
pivot_longer(c(C, W, R, WR),
names_to = "trt",
values_to = "moisture",
values_drop_na = TRUE)%>%
filter(moisture > 0)
# removing outliers
Q1m <- quantile(moist$moisture, .25)
Q3m <- quantile(moist$moisture, .75)
IQRm <- IQR(moist$moisture)
moist <- subset(moist, moist$moisture > (Q1m - 1.5*IQRm) & moist$moisture < (Q3m + 1.5*IQRm))
boxplot(moist$moisture)
# adding date and month columns
moist <- moist %>%
mutate(datee = format(date, format = "%F"),
month = format(date, format = "%b"),
day = format(date, format = "%d")) %>%
filter(month != "Nov")
# daily average temperature
temp.average <- temp %>%
group_by(wp, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.temp = mean(temperature),
max.temp = max(temperature),
min.temp = min(temperature),
dtr = max.temp - min.temp)
# daily average moisture
moist.average <- moist %>%
group_by(wp, plot, trt, irrigation, datee, day, month) %>%
summarize(mean.moist = mean(moisture))
daily.TM <- merge(temp.average, moist.average)
daily.TM <- daily.TM[-1, ] # removing first row - not a full day average
daily.TM$warming <-ifelse(daily.TM$trt %in% c("C", "R"), "Control", "OTC")
daily.TM$residue <-ifelse(daily.TM$trt %in% c("C", "W"), "noResidue", "Residue")
daily.TM <- daily.TM %>%
relocate(warming, residue, .before = irrigation)
daily.TM[, c(1:6, 9)] <- lapply(daily.TM[, c(1:6, 9)], factor)
daily.TM$trt <- factor(daily.TM$trt, levels = c("C", "W", "R", "WR"))
daily.TM$month <- factor(daily.TM$month, levels = c("Jun", "Jul","Aug", "Sep", "Oct", "Nov"))
daily.TM$datee <- strptime(daily.TM$datee, format  = "%Y-%m-%d")
daily.TM$datee <- as.POSIXct(daily.TM$datee)
str(daily.TM)
weekly.TM <- daily.TM %>%
group_by(irrigation, trt, week = cut(datee, "week", start.on.monday = FALSE)) %>%
summarise(temp = mean(mean.temp),
moist = mean(mean.moist),
max.tempr = mean(max.temp),
min.tempr = mean(min.temp),
mean.dtr = mean(dtr))
weekly.TM$week <- strptime(weekly.TM$week, format  = "%Y-%m-%d")
weekly.TM$week <- as.POSIXct(weekly.TM$week)
# temporal variation of temperature (graph)
# mean temperature
(fig1 <- ggplot(weekly.TM, aes(week, temp, color = trt))+
geom_line(linewidth = 1) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Soil Temperature ("*~degree*C*")")) +
facet_wrap(~irrigation) +
scale_y_continuous(limits = c(15, 35)) +
theme)
# max and min temp
(max_min <- ggplot(weekly.TM)+
geom_line(aes(x = week, y = max.tempr), lty = "solid", linewidth = 0.7) +
geom_line(aes(x = week, y = min.tempr), lty = "dashed", linewidth = 0.7) +
xlab( "Months") +
ylab(expression("Soil Temperature ("*~degree*C*")")) +
facet_grid(irrigation~trt) + theme)
# daily temperature range
(dt <- ggplot(weekly.TM)+
geom_line(aes(x = week, y = mean.dtr, color = trt), size = 1) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Daily temperature range ("*~degree*C*")")) +
facet_wrap(~ irrigation) + theme)
#######################################################
# precipitation
precipitation <- read_excel("~/Desktop/MS-project/data/weather.data.xlsx")
weekly.rain <- precipitation %>%
group_by(week = cut(date.time, "week", start.on.monday = FALSE)) %>%
summarise(rain = sum(precipitation))
weekly.rain$week <- strptime(weekly.rain$week, format  = "%Y-%m-%d")
weekly.rain$week <- as.POSIXct(weekly.rain$week)
####################################################
# temporal variation of moisture (graph)
(fig2 <- ggplot(weekly.TM, aes(week, color = trt)) +
geom_line(aes(y = moist), size = 1) +
geom_bar(data = weekly.rain, aes(x = week, y = rain/100), width = 0.01,
stat = "identity",
fill = "deepskyblue3" ,
color = "deepskyblue3") +
scale_y_continuous(sec.axis = sec_axis (~ .*100, name = "Rainfall (mm)")) +
scale_color_manual(values = c("#131E3A", "#980019", "#0018F9", "#0B6623"),
labels = c("C", "OTC", "R", "OTC + R")) +
xlab( "Months") +
ylab(expression("Volumetric water content ("*m^3/m^3*")")) +
facet_wrap(~irrigation) + theme)
# temperature model
monthly.avg.TM <- daily.TM %>%
group_by(wp, plot, warming, residue, irrigation, month) %>%
summarize(moisture = mean(mean.moist),
temp = mean(mean.temp),
mean.dtr = mean(dtr))
temp_model <- lmer(temp ~ warming * residue * irrigation +
(1|block) + (1|month),
data = monthly.avg.TM)
temp_model <- lmer(temp ~ warming * residue * irrigation +
(1|wp) + (1|month),
data = monthly.avg.TM)
Anova(temp_model, type = 3, test.statistic = "F")
summary(temp_model)
plot(temp_model)
qqnorm(residuals(temp_model))
hist(residuals(temp_model))
r.squaredGLMM(temp_model)
# pairwise comparison
# interaction was not significant. we ran pairwise comparison for the
# significant main effects.
temp.res.emm <- emmeans(temp_model, ~ residue)
contrast(temp.res.emm, "consec", simple = "each", combine = TRUE)
temp.irr.emm <- emmeans(temp_model, ~ irrigation)
contrast(temp.irr.emm, "consec", simple = "each", combine = TRUE)
# temp vs moisture
temp2 <- lmer(temp ~ moisture + (1|wp) + (1|month),
data = monthly.avg.TM )
Anova(temp2, type = 3, test.statistic = "F")
Anova(temp_model)
r.squaredGLMM(temp_model)
Anova(temp2)
temp.plot <- daily.TM %>%
group_by(wp, plot, warming, residue, irrigation) %>%
summarise(temp = mean(mean.temp))
Anova(temp_model, type = 3)
r.squaredGLMM(temp_model)
Anova(temp2, type = 3)
r.squaredGLMM(temp2)
temp.plot.avg <-
as.data.frame(emmeans(temp_model,  ~ warming * residue * irrigation))
install.packages("multcomp")
install.packages("multcompView")
theme <- theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill = NA, linewidth = 1),
strip.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
panel.border = element_rect(linewidth = 1))
##############################
# library
##############################
library(readxl)
library(tidyverse)
library(dplyr)
library(lme4)
library(car)
library(effects)
library(ggplot2)
library(scales)
library(multcompView)
library(emmeans)
theme <- theme_bw() +
theme(panel.grid = element_blank(),
legend.position = "top",
legend.direction = "horizontal",
legend.title = element_blank(),
legend.text = element_text(size = 14),
strip.background = element_rect(fill = NA, linewidth = 1),
strip.text = element_text(size = 14),
axis.title = element_text(size = 14),
axis.text = element_text(size = 14),
panel.border = element_rect(linewidth = 1))
nutrients <- read_excel("~/Desktop/MSProject/MS_Paper/data/nutrients.xlsx")
nutrients$warming <-ifelse(nutrients$trt %in% c("C", "R"), "Ambient", "OTC")
nutrients$residue <-ifelse(nutrients$trt %in% c("C", "W"), "noResidue", "Residue")
# Reordering column names, so warming and residue are earlier
nutrients <- nutrients %>%
relocate(warming, residue, .before = irrigation)
nutrients[, 2:7] <- lapply(nutrients[, 2:7], factor)
average.nutrients <- nutrients %>%
group_by(warming, residue, irrigation) %>%
summarize(mnitN = mean(nitN),
sdnitN = sd(nitN),
mNH4 = mean(NH4),
sdNH4 = sd(NH4),
mOM = mean(OM),
sdOM = sd(OM),
mP = mean(P),
sdP = sd(P),
mK = mean(K),
sdK = sd(K),
mMg = mean(Mg),
sdMg = sd(Mg),
mCa = mean (Ca),
sdCa = sd(Ca),
mS =mean(S),
sdS = sd(S),
mB = mean(B),
sdB = sd(B),
mZn = mean(Zn),
sdZn = sd(Zn),
mFe = mean(Fe),
sdFe = sd(Fe),
mCU = mean(Cu),
sdCu = sd(Cu),
mMn = mean(Mn),
sdMn = sd(Mn),
mNa = mean(Na),
sdNa = sd(Na),
mepH = mean(pH),
sdpH = sd(pH),
meanCEC= mean(CEC),
sdCEC = sd(CEC))
om.plot <- nutrients %>%
group_by(wp, plot, warming, residue, irrigation) %>%
summarise(OM = mean(OM),
vol.water = mean(vol.water),
temp = mean(temp))
# OM model
om_model <- lmer(OM ~ warming * residue * irrigation + (1|wp),
data = om.plot)
# OM model
om_model <- lmer(OM ~ warming * residue * irrigation + (1|wp),
data = om.plot)
install.packages("lme4")
install.packages("lme4")
